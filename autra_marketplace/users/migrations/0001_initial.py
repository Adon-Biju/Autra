# Generated by Django 5.0.1 on 2025-09-07 17:47

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('user_type', models.CharField(choices=[('developer', 'Developer'), ('business', 'Business')], default='business', help_text='Are you a developer creating AI agents or a business looking to hire them?', max_length=10)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('company_name', models.CharField(blank=True, help_text='Your company or organization name', max_length=200)),
                ('bio', models.TextField(blank=True, help_text='Tell us about yourself or your company', max_length=1000)),
                ('phone_number', models.CharField(blank=True, max_length=17, validators=[django.core.validators.RegexValidator(message="Phone number must be entered in the format: '+999999999'. Up to 15 digits allowed.", regex='^\\+?1?\\d{9,15}$')])),
                ('website', models.URLField(blank=True)),
                ('location', models.CharField(blank=True, max_length=100)),
                ('github_username', models.CharField(blank=True, max_length=100)),
                ('linkedin_url', models.URLField(blank=True)),
                ('portfolio_url', models.URLField(blank=True)),
                ('skills', models.JSONField(blank=True, default=list)),
                ('years_of_experience', models.PositiveIntegerField(blank=True, null=True)),
                ('industry', models.CharField(blank=True, max_length=100)),
                ('company_size', models.CharField(blank=True, choices=[('1-10', '1-10 employees'), ('11-50', '11-50 employees'), ('51-200', '51-200 employees'), ('201-500', '201-500 employees'), ('501-1000', '501-1000 employees'), ('1000+', '1000+ employees')], max_length=20)),
                ('verified', models.BooleanField(default=False, help_text='Has this user been verified by Autra?')),
                ('verification_date', models.DateTimeField(blank=True, null=True)),
                ('trust_score', models.IntegerField(default=0, help_text='Trust score based on activity and reviews')),
                ('stripe_customer_id', models.CharField(blank=True, max_length=255)),
                ('stripe_account_id', models.CharField(blank=True, help_text='Connected Stripe account for receiving payments', max_length=255)),
                ('profile_completed', models.BooleanField(default=False)),
                ('onboarding_completed', models.BooleanField(default=False)),
                ('email_notifications', models.BooleanField(default=True)),
                ('sms_notifications', models.BooleanField(default=False)),
                ('newsletter_subscription', models.BooleanField(default=True)),
                ('total_spent', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount spent on the platform (for businesses)', max_digits=10)),
                ('total_earned', models.DecimalField(decimal_places=2, default=0.0, help_text='Total amount earned on the platform (for developers)', max_digits=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('last_active', models.DateTimeField(blank=True, null=True)),
                ('avatar', models.ImageField(blank=True, help_text='Profile picture', null=True, upload_to='avatars/')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'User',
                'verbose_name_plural': 'Users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='BusinessProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tax_id', models.CharField(blank=True, max_length=50)),
                ('billing_address', models.TextField(blank=True)),
                ('billing_email', models.EmailField(blank=True, max_length=254)),
                ('preferred_budget_range', models.CharField(blank=True, choices=[('low', 'Low (< $500/month)'), ('medium', 'Medium ($500 - $5,000/month)'), ('high', 'High ($5,000+/month)'), ('enterprise', 'Enterprise (Custom)')], max_length=20)),
                ('interested_categories', models.JSONField(default=list, help_text='Categories of AI agents interested in')),
                ('total_agents_hired', models.IntegerField(default=0)),
                ('active_subscriptions', models.IntegerField(default=0)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='business_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='DeveloperProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specializations', models.JSONField(default=list, help_text='AI/ML specializations')),
                ('certifications', models.JSONField(default=list, help_text='Professional certifications')),
                ('available_for_custom_work', models.BooleanField(default=True)),
                ('hourly_rate', models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ('preferred_project_size', models.CharField(choices=[('small', 'Small (< $1,000)'), ('medium', 'Medium ($1,000 - $10,000)'), ('large', 'Large ($10,000+)'), ('any', 'Any size')], default='any', max_length=20)),
                ('total_agents', models.IntegerField(default=0)),
                ('successful_deployments', models.IntegerField(default=0)),
                ('average_response_time', models.IntegerField(default=24, help_text='Average response time in hours')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='developer_profile', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['user_type'], name='users_user_user_ty_4573bb_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['verified'], name='users_user_verifie_1ff25d_idx'),
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['email'], name='users_user_email_6f2530_idx'),
        ),
    ]
